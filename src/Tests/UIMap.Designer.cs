// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Tests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Закрывает приложение.
        /// </summary>
        public void CloseAppRecordedMethod()
        {
            #region Variable Declarations
            WinButton uIЗакрытьButton = this.UIЛабораторная1Window.UIЛабораторная1TitleBar.UIЗакрытьButton;
            #endregion

            // Click 'Закрыть' button
            Mouse.Click(uIЗакрытьButton, new Point(22, 14));
        }
        
        /// <summary>
        /// В специальном txtBox должно отображаться имя нового активного словаря.
        /// </summary>
        public void FileReselectAssert()
        {
            #region Variable Declarations
            WinEdit uITxtBxActiveDictionarEdit = this.UIЛабораторная1Window.UIОтсутствуетWindow.UITxtBxActiveDictionarEdit;
            #endregion

            // Verify that the 'Text' property of 'txtBxActiveDictionary' text box equals 'UK.txt'
            Assert.AreEqual(this.FileReselectAssertExpectedValues.UITxtBxActiveDictionarEditText, uITxtBxActiveDictionarEdit.Text);
        }
        
        /// <summary>
        /// FileReselectRecordedMethod
        /// </summary>
        public void FileReselectRecordedMethod()
        {
            #region Variable Declarations
            WinMenuItem uIВыбратьсловарьMenuItem = this.UIЛабораторная1Window.UIMenuStripMenuBar.UIФайлMenuItem.UIВыбратьсловарьMenuItem;
            WinEdit uIИмяEdit = this.UIОткрытиеWindow.UIItemWindow.UIDictionariesListItem.UIИмяEdit;
            WinEdit uIИмяEdit1 = this.UIОткрытиеWindow.UIItemWindow1.UIUKtxtListItem.UIИмяEdit;
            WinSplitButton uIОткрытьSplitButton = this.UIОткрытиеWindow.UIОткрытьWindow.UIОткрытьSplitButton;
            #endregion

            // Click 'Файл' -> 'Выбрать словарь' menu item
            Mouse.Click(uIВыбратьсловарьMenuItem, new Point(38, 7));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(45, 7));

            // Click 'Имя' text box
            Mouse.Click(uIИмяEdit1, new Point(47, 6));

            // Click '&Открыть' split button
            Mouse.Click(uIОткрытьSplitButton, new Point(10, 15));
        }
        
        /// <summary>
        /// В специальном txtBox должно отображаться имя текущего активного словаря.
        /// </summary>
        public void FileSelectAssert()
        {
            #region Variable Declarations
            WinEdit uITxtBxActiveDictionarEdit = this.UIЛабораторная1Window.UIОтсутствуетWindow.UITxtBxActiveDictionarEdit;
            #endregion

            // Verify that the 'Text' property of 'txtBxActiveDictionary' text box equals 'pro-lingRus.txt'
            Assert.AreEqual(this.FileSelectAssertExpectedValues.UITxtBxActiveDictionarEditText, uITxtBxActiveDictionarEdit.Text);
        }
        
        /// <summary>
        /// FileSelectRecordedMethod
        /// </summary>
        public void FileSelectRecordedMethod()
        {
            #region Variable Declarations
            WinMenuItem uIВыбратьсловарьMenuItem = this.UIЛабораторная1Window.UIMenuStripMenuBar.UIФайлMenuItem.UIВыбратьсловарьMenuItem;
            WinEdit uIИмяEdit = this.UIОткрытиеWindow.UIItemWindow.UIDictionariesListItem.UIИмяEdit;
            WinEdit uIИмяEdit1 = this.UIОткрытиеWindow.UIItemWindow1.UIProlingRustxtListItem.UIИмяEdit;
            WinSplitButton uIОткрытьSplitButton = this.UIОткрытиеWindow.UIОткрытьWindow.UIОткрытьSplitButton;
            #endregion

            // Click 'Файл' -> 'Выбрать словарь' menu item
            Mouse.Click(uIВыбратьсловарьMenuItem, new Point(47, 5));

            // Double-Click 'Имя' text box
            Mouse.DoubleClick(uIИмяEdit, new Point(26, 16));

            // Click 'Имя' text box
            Mouse.Click(uIИмяEdit1, new Point(36, 13));

            // Click '&Открыть' split button
            Mouse.Click(uIОткрытьSplitButton, new Point(34, 12));
        }
        
        /// <summary>
        /// Method for creation Listbox code-behind.
        /// </summary>
        public void ListBoxAssert()
        {
            #region Variable Declarations
            WinList uILbClosestWordsList = this.UIЛабораторная1Window.UILbClosestWordsWindow.UILbClosestWordsList;
            #endregion

            // Verify that the 'ControlName' property of 'lbClosestWords' list box is not equal to 'null'
            Assert.IsNotNull(uILbClosestWordsList.ControlName);
        }
        
        /// <summary>
        /// Проверяет верность выведенного значения количества найденных слов.
        /// </summary>
        public void ResultViewManyCountAssert()
        {
            #region Variable Declarations
            WinEdit uITxtBxWordsCountEdit = this.UIЛабораторная1Window.UITxtBxWordsCountWindow.UITxtBxWordsCountEdit;
            #endregion

            // Verify that the 'Text' property of 'txtBxWordsCount' text box equals '8'
            Assert.AreEqual(this.ResultViewManyCountAssertExpectedValues.UITxtBxWordsCountEditText, uITxtBxWordsCountEdit.Text);
        }
        
        /// <summary>
        /// ResultViewManyRecordedMethod - Use 'ResultViewManyRecordedMethodParams' to pass parameters into this method.
        /// </summary>
        public void ResultViewManyRecordedMethod()
        {
            #region Variable Declarations
            WinEdit uITxtInputWordEdit = this.UIЛабораторная1Window.UITxtInputWordWindow.UITxtInputWordEdit;
            WinButton uIПоискButton = this.UIЛабораторная1Window.UIПоискWindow.UIПоискButton;
            #endregion

            // Type 'малако' in 'txtInputWord' text box
            uITxtInputWordEdit.Text = this.ResultViewManyRecordedMethodParams.UITxtInputWordEditText;

            // Click 'Поиск' button
            Mouse.Click(uIПоискButton, new Point(88, 11));
        }
        
        /// <summary>
        /// Проверяет верность выведенного значения количества найденных слов.
        /// </summary>
        public void ResultViewSingleCountAssert()
        {
            #region Variable Declarations
            WinEdit uITxtBxWordsCountEdit = this.UIЛабораторная1Window.UITxtBxWordsCountWindow.UITxtBxWordsCountEdit;
            #endregion

            // Verify that the 'Text' property of 'txtBxWordsCount' text box equals '1'
            Assert.AreEqual(this.ResultViewSingleCountAssertExpectedValues.UITxtBxWordsCountEditText, uITxtBxWordsCountEdit.Text);
        }
        
        /// <summary>
        /// ResultViewSIngleRecordedMethod - Use 'ResultViewSIngleRecordedMethodParams' to pass parameters into this method.
        /// </summary>
        public void ResultViewSIngleRecordedMethod()
        {
            #region Variable Declarations
            WinEdit uITxtInputWordEdit = this.UIЛабораторная1Window.UITxtInputWordWindow.UITxtInputWordEdit;
            WinButton uIПоискButton = this.UIЛабораторная1Window.UIПоискWindow.UIПоискButton;
            #endregion

            // Type 'testing' in 'txtInputWord' text box
            uITxtInputWordEdit.Text = this.ResultViewSIngleRecordedMethodParams.UITxtInputWordEditText;

            // Click 'Поиск' button
            Mouse.Click(uIПоискButton, new Point(105, 12));
        }
        
        #region Properties
        public virtual FileReselectAssertExpectedValues FileReselectAssertExpectedValues
        {
            get
            {
                if ((this.mFileReselectAssertExpectedValues == null))
                {
                    this.mFileReselectAssertExpectedValues = new FileReselectAssertExpectedValues();
                }
                return this.mFileReselectAssertExpectedValues;
            }
        }
        
        public virtual FileSelectAssertExpectedValues FileSelectAssertExpectedValues
        {
            get
            {
                if ((this.mFileSelectAssertExpectedValues == null))
                {
                    this.mFileSelectAssertExpectedValues = new FileSelectAssertExpectedValues();
                }
                return this.mFileSelectAssertExpectedValues;
            }
        }
        
        public virtual ResultViewManyCountAssertExpectedValues ResultViewManyCountAssertExpectedValues
        {
            get
            {
                if ((this.mResultViewManyCountAssertExpectedValues == null))
                {
                    this.mResultViewManyCountAssertExpectedValues = new ResultViewManyCountAssertExpectedValues();
                }
                return this.mResultViewManyCountAssertExpectedValues;
            }
        }
        
        public virtual ResultViewManyRecordedMethodParams ResultViewManyRecordedMethodParams
        {
            get
            {
                if ((this.mResultViewManyRecordedMethodParams == null))
                {
                    this.mResultViewManyRecordedMethodParams = new ResultViewManyRecordedMethodParams();
                }
                return this.mResultViewManyRecordedMethodParams;
            }
        }
        
        public virtual ResultViewSingleCountAssertExpectedValues ResultViewSingleCountAssertExpectedValues
        {
            get
            {
                if ((this.mResultViewSingleCountAssertExpectedValues == null))
                {
                    this.mResultViewSingleCountAssertExpectedValues = new ResultViewSingleCountAssertExpectedValues();
                }
                return this.mResultViewSingleCountAssertExpectedValues;
            }
        }
        
        public virtual ResultViewSIngleRecordedMethodParams ResultViewSIngleRecordedMethodParams
        {
            get
            {
                if ((this.mResultViewSIngleRecordedMethodParams == null))
                {
                    this.mResultViewSIngleRecordedMethodParams = new ResultViewSIngleRecordedMethodParams();
                }
                return this.mResultViewSIngleRecordedMethodParams;
            }
        }
        
        public UIЛабораторная1Window UIЛабораторная1Window
        {
            get
            {
                if ((this.mUIЛабораторная1Window == null))
                {
                    this.mUIЛабораторная1Window = new UIЛабораторная1Window();
                }
                return this.mUIЛабораторная1Window;
            }
        }
        
        public UIОткрытиеWindow UIОткрытиеWindow
        {
            get
            {
                if ((this.mUIОткрытиеWindow == null))
                {
                    this.mUIОткрытиеWindow = new UIОткрытиеWindow();
                }
                return this.mUIОткрытиеWindow;
            }
        }
        #endregion
        
        #region Fields
        private FileReselectAssertExpectedValues mFileReselectAssertExpectedValues;
        
        private FileSelectAssertExpectedValues mFileSelectAssertExpectedValues;
        
        private ResultViewManyCountAssertExpectedValues mResultViewManyCountAssertExpectedValues;
        
        private ResultViewManyRecordedMethodParams mResultViewManyRecordedMethodParams;
        
        private ResultViewSingleCountAssertExpectedValues mResultViewSingleCountAssertExpectedValues;
        
        private ResultViewSIngleRecordedMethodParams mResultViewSIngleRecordedMethodParams;
        
        private UIЛабораторная1Window mUIЛабораторная1Window;
        
        private UIОткрытиеWindow mUIОткрытиеWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FileReselectAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class FileReselectAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtBxActiveDictionary' text box equals 'UK.txt'
        /// </summary>
        public string UITxtBxActiveDictionarEditText = "UK.txt";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FileSelectAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class FileSelectAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtBxActiveDictionary' text box equals 'pro-lingRus.txt'
        /// </summary>
        public string UITxtBxActiveDictionarEditText = "pro-lingRus.txt";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ResultViewManyCountAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ResultViewManyCountAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtBxWordsCount' text box equals '8'
        /// </summary>
        public string UITxtBxWordsCountEditText = "8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ResultViewManyRecordedMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ResultViewManyRecordedMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'малако' in 'txtInputWord' text box
        /// </summary>
        public string UITxtInputWordEditText = "малако";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ResultViewSingleCountAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ResultViewSingleCountAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtBxWordsCount' text box equals '1'
        /// </summary>
        public string UITxtBxWordsCountEditText = "1";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ResultViewSIngleRecordedMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class ResultViewSIngleRecordedMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'testing' in 'txtInputWord' text box
        /// </summary>
        public string UITxtInputWordEditText = "testing";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIЛабораторная1Window : WinWindow
    {
        
        public UIЛабораторная1Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Лабораторная 1";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public UIЛабораторная1TitleBar UIЛабораторная1TitleBar
        {
            get
            {
                if ((this.mUIЛабораторная1TitleBar == null))
                {
                    this.mUIЛабораторная1TitleBar = new UIЛабораторная1TitleBar(this);
                }
                return this.mUIЛабораторная1TitleBar;
            }
        }
        
        public UIMenuStripMenuBar UIMenuStripMenuBar
        {
            get
            {
                if ((this.mUIMenuStripMenuBar == null))
                {
                    this.mUIMenuStripMenuBar = new UIMenuStripMenuBar(this);
                }
                return this.mUIMenuStripMenuBar;
            }
        }
        
        public UIОтсутствуетWindow UIОтсутствуетWindow
        {
            get
            {
                if ((this.mUIОтсутствуетWindow == null))
                {
                    this.mUIОтсутствуетWindow = new UIОтсутствуетWindow(this);
                }
                return this.mUIОтсутствуетWindow;
            }
        }
        
        public UITxtInputWordWindow UITxtInputWordWindow
        {
            get
            {
                if ((this.mUITxtInputWordWindow == null))
                {
                    this.mUITxtInputWordWindow = new UITxtInputWordWindow(this);
                }
                return this.mUITxtInputWordWindow;
            }
        }
        
        public UIПоискWindow UIПоискWindow
        {
            get
            {
                if ((this.mUIПоискWindow == null))
                {
                    this.mUIПоискWindow = new UIПоискWindow(this);
                }
                return this.mUIПоискWindow;
            }
        }
        
        public UITxtBxWordsCountWindow UITxtBxWordsCountWindow
        {
            get
            {
                if ((this.mUITxtBxWordsCountWindow == null))
                {
                    this.mUITxtBxWordsCountWindow = new UITxtBxWordsCountWindow(this);
                }
                return this.mUITxtBxWordsCountWindow;
            }
        }
        
        public UILbClosestWordsWindow UILbClosestWordsWindow
        {
            get
            {
                if ((this.mUILbClosestWordsWindow == null))
                {
                    this.mUILbClosestWordsWindow = new UILbClosestWordsWindow(this);
                }
                return this.mUILbClosestWordsWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIЛабораторная1TitleBar mUIЛабораторная1TitleBar;
        
        private UIMenuStripMenuBar mUIMenuStripMenuBar;
        
        private UIОтсутствуетWindow mUIОтсутствуетWindow;
        
        private UITxtInputWordWindow mUITxtInputWordWindow;
        
        private UIПоискWindow mUIПоискWindow;
        
        private UITxtBxWordsCountWindow mUITxtBxWordsCountWindow;
        
        private UILbClosestWordsWindow mUILbClosestWordsWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIЛабораторная1TitleBar : WinTitleBar
    {
        
        public UIЛабораторная1TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public WinButton UIЗакрытьButton
        {
            get
            {
                if ((this.mUIЗакрытьButton == null))
                {
                    this.mUIЗакрытьButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIЗакрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Закрыть";
                    this.mUIЗакрытьButton.WindowTitles.Add("Лабораторная 1");
                    #endregion
                }
                return this.mUIЗакрытьButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIЗакрытьButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIMenuStripMenuBar : WinMenuBar
    {
        
        public UIMenuStripMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "menuStrip";
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public UIФайлMenuItem UIФайлMenuItem
        {
            get
            {
                if ((this.mUIФайлMenuItem == null))
                {
                    this.mUIФайлMenuItem = new UIФайлMenuItem(this);
                }
                return this.mUIФайлMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UIФайлMenuItem mUIФайлMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIФайлMenuItem : WinMenuItem
    {
        
        public UIФайлMenuItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Файл";
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIВыбратьсловарьMenuItem
        {
            get
            {
                if ((this.mUIВыбратьсловарьMenuItem == null))
                {
                    this.mUIВыбратьсловарьMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIВыбратьсловарьMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Выбрать словарь";
                    this.mUIВыбратьсловарьMenuItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIВыбратьсловарьMenuItem.WindowTitles.Add("Лабораторная 1");
                    #endregion
                }
                return this.mUIВыбратьсловарьMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIВыбратьсловарьMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIОтсутствуетWindow : WinWindow
    {
        
        public UIОтсутствуетWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtBxActiveDictionary";
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtBxActiveDictionarEdit
        {
            get
            {
                if ((this.mUITxtBxActiveDictionarEdit == null))
                {
                    this.mUITxtBxActiveDictionarEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtBxActiveDictionarEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Активный словарь:";
                    this.mUITxtBxActiveDictionarEdit.WindowTitles.Add("Лабораторная 1");
                    #endregion
                }
                return this.mUITxtBxActiveDictionarEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtBxActiveDictionarEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtInputWordWindow : WinWindow
    {
        
        public UITxtInputWordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtInputWord";
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtInputWordEdit
        {
            get
            {
                if ((this.mUITxtInputWordEdit == null))
                {
                    this.mUITxtInputWordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtInputWordEdit.WindowTitles.Add("Лабораторная 1");
                    #endregion
                }
                return this.mUITxtInputWordEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtInputWordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIПоискWindow : WinWindow
    {
        
        public UIПоискWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnFindClosestWords";
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public WinButton UIПоискButton
        {
            get
            {
                if ((this.mUIПоискButton == null))
                {
                    this.mUIПоискButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIПоискButton.SearchProperties[WinButton.PropertyNames.Name] = "Поиск";
                    this.mUIПоискButton.WindowTitles.Add("Лабораторная 1");
                    #endregion
                }
                return this.mUIПоискButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIПоискButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtBxWordsCountWindow : WinWindow
    {
        
        public UITxtBxWordsCountWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtBxWordsCount";
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtBxWordsCountEdit
        {
            get
            {
                if ((this.mUITxtBxWordsCountEdit == null))
                {
                    this.mUITxtBxWordsCountEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtBxWordsCountEdit.WindowTitles.Add("Лабораторная 1");
                    #endregion
                }
                return this.mUITxtBxWordsCountEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtBxWordsCountEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILbClosestWordsWindow : WinWindow
    {
        
        public UILbClosestWordsWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lbClosestWords";
            this.WindowTitles.Add("Лабораторная 1");
            #endregion
        }
        
        #region Properties
        public WinList UILbClosestWordsList
        {
            get
            {
                if ((this.mUILbClosestWordsList == null))
                {
                    this.mUILbClosestWordsList = new WinList(this);
                    #region Search Criteria
                    this.mUILbClosestWordsList.SearchProperties[WinList.PropertyNames.Name] = "Слово для поиска:";
                    this.mUILbClosestWordsList.WindowTitles.Add("Лабораторная 1");
                    #endregion
                }
                return this.mUILbClosestWordsList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUILbClosestWordsList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIОткрытиеWindow : WinWindow
    {
        
        public UIОткрытиеWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Открытие";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Открытие");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIОткрытьWindow UIОткрытьWindow
        {
            get
            {
                if ((this.mUIОткрытьWindow == null))
                {
                    this.mUIОткрытьWindow = new UIОткрытьWindow(this);
                }
                return this.mUIОткрытьWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIОткрытьWindow mUIОткрытьWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Открытие");
            #endregion
        }
        
        #region Properties
        public UIDictionariesListItem UIDictionariesListItem
        {
            get
            {
                if ((this.mUIDictionariesListItem == null))
                {
                    this.mUIDictionariesListItem = new UIDictionariesListItem(this);
                }
                return this.mUIDictionariesListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIDictionariesListItem mUIDictionariesListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDictionariesListItem : WinListItem
    {
        
        public UIDictionariesListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "Dictionaries";
            this.WindowTitles.Add("Открытие");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Просмотр элементов";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Открытие");
            #endregion
        }
        
        #region Properties
        public UIProlingRustxtListItem UIProlingRustxtListItem
        {
            get
            {
                if ((this.mUIProlingRustxtListItem == null))
                {
                    this.mUIProlingRustxtListItem = new UIProlingRustxtListItem(this);
                }
                return this.mUIProlingRustxtListItem;
            }
        }
        
        public UIUKtxtListItem UIUKtxtListItem
        {
            get
            {
                if ((this.mUIUKtxtListItem == null))
                {
                    this.mUIUKtxtListItem = new UIUKtxtListItem(this);
                }
                return this.mUIUKtxtListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIProlingRustxtListItem mUIProlingRustxtListItem;
        
        private UIUKtxtListItem mUIUKtxtListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIProlingRustxtListItem : WinListItem
    {
        
        public UIProlingRustxtListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "pro-lingRus.txt";
            this.WindowTitles.Add("Открытие");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIUKtxtListItem : WinListItem
    {
        
        public UIUKtxtListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "UK.txt";
            this.WindowTitles.Add("Открытие");
            #endregion
        }
        
        #region Properties
        public WinEdit UIИмяEdit
        {
            get
            {
                if ((this.mUIИмяEdit == null))
                {
                    this.mUIИмяEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIИмяEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Имя";
                    this.mUIИмяEdit.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mUIИмяEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIИмяEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIОткрытьWindow : WinWindow
    {
        
        public UIОткрытьWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Открытие");
            #endregion
        }
        
        #region Properties
        public WinButton UIОткрытьButton
        {
            get
            {
                if ((this.mUIОткрытьButton == null))
                {
                    this.mUIОткрытьButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIОткрытьButton.SearchProperties[WinButton.PropertyNames.Name] = "Открыть";
                    this.mUIОткрытьButton.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mUIОткрытьButton;
            }
        }
        
        public WinSplitButton UIОткрытьSplitButton
        {
            get
            {
                if ((this.mUIОткрытьSplitButton == null))
                {
                    this.mUIОткрытьSplitButton = new WinSplitButton(this);
                    #region Search Criteria
                    this.mUIОткрытьSplitButton.SearchProperties[WinButton.PropertyNames.Name] = "Открыть";
                    this.mUIОткрытьSplitButton.WindowTitles.Add("Открытие");
                    #endregion
                }
                return this.mUIОткрытьSplitButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIОткрытьButton;
        
        private WinSplitButton mUIОткрытьSplitButton;
        #endregion
    }
}
